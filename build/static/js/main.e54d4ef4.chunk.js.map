{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/menuComponent.js","components/dishDetailComponent.js","components/leaderDetailComponent.js","components/aboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/contactComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/mainComponent.js","redux/Dishes.js","redux/Leaders.js","redux/Comments.js","redux/Promotions.js","redux/Forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","object","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMsg","Breadcrumb","BreadcrumbItem","active","required","val","length","minlength","len","CommentForm","state","isModalOpen","handleSubmit","bind","toggleModal","values","alert","JSON","stringify","console","log","this","postComment","dishId","rating","author","comment","setState","Fragment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","class","Label","md","htmlFor","Col","select","model","default","placeholder","text","validators","maxlength","show","messages","textarea","rows","type","Component","Displayfun","in","transformProps","exitTransform","CardBody","CardText","description","Commentfun","comments","dishcom_var","date","Detail","Leader","leaders","leader","Media","body","heading","subtitle","designation","About","CardHeader","title","leadersLoading","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","color","Footer","Home","maxLength","minLength","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedBackForm","role","htmlfor","size","offset","checkbox","leadersFailed","payload","addLeaders","addComments","commentsFailed","errmess","addPromos","promos","promosLoading","promosFailed","dishesLoading","dishesFailed","addDishes","Main","FetchDishes","FetchLeaders","FetchPromos","FetchComments","location","classNames","timeout","path","component","exact","match","filter","parseInt","params","errorMsg","commenterrMsg","leaderserrMsg","withRouter","connect","promotions","dispatch","newFeedback","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","newComment","Date","toISOString","addComment","actions","reset","Dishes","action","Leaders","Comments","concat","Promotions","InitializeFeedBack","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e54d4ef4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl='http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nfunction RenderMenuItem({dish})\r\n    {\r\n    \r\n        return(\r\n            <Card >\r\n                <Link to={`/menu/${dish.id}`}>\r\n                <CardImg  width=\"100%\" object src={baseUrl+ dish.image} alt={dish.name}/>\r\n                <CardImgOverlay>\r\n                    <CardTitle >{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n                </Link>                    \r\n            </Card>\r\n            );\r\n\r\n        }\r\n    const Menu=(props) =>\r\n    {\r\n\r\n        const menu=props.dishes.dishes.map((dish) =>{\r\n                return(\r\n                    <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                        <RenderMenuItem  dish={dish} isLoading={props.isLoading} errMsg={props.errMsg} />    \r\n\r\n                    </div>\r\n\r\n                );\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMsg) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMsg}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>                \r\n                    </div>\r\n                    <div className=\"row\">\r\n                            {menu}           \r\n                    </div>\r\n                    \r\n                </div>\r\n            );\r\n    };\r\nexport default Menu;","import React,{Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle,Button,Label, Breadcrumb,Modal,ModalBody,ModalHeader,Col,Row, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { LocalForm,Errors,Control } from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent'; \r\nimport {Stagger,FadeTransform,Fade} from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nconst required=(val)=> val &&val.length;\r\nconst minlength=(len)=> (val)=> (val) && (val.length>=len);\r\nconst maxlength=(len)=> (val)=>!(val) ||(val.length<=len);\r\nclass CommentForm extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n            super(props);\r\n            this.state=\r\n            {   \r\n                isModalOpen:false\r\n\r\n            };\r\n            this.handleSubmit=this.handleSubmit.bind(this);\r\n            this.toggleModal=this.toggleModal.bind(this);\r\n    }\r\n    handleSubmit(values)\r\n    {   alert(JSON.stringify(values));\r\n        console.log(JSON.stringify(values));\r\n        this.toggleModal();\r\n        \r\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\r\n\r\n    }\r\n    toggleModal()\r\n    {\r\n        this.setState({\r\n            isModalOpen:!this.state.isModalOpen\r\n        });\r\n\r\n    }\r\n    render()\r\n    {\r\n    return(\r\n        <React.Fragment>\r\n            <Button outline onClick={this.toggleModal} ><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>\r\n                        Submit Comment\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row class=\"form-group\">\r\n                                <Label md={12} htmlFor=\"rating\" >\r\n                                        Rating\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\" \r\n                                     default=\"1\" placeholder=\"enter Rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label md={12} htmlFor=\"author\">\r\n                                    Your Name\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                <Control.text model=\".author\" name=\"author\" id=\"author\"\r\n                                placeholder=\"enter your name\" className=\"form-control\"\r\n                                validators={{required,\r\n                                    maxlength:maxlength(15),\r\n                                    minlength:minlength(3)}}\r\n                                />\r\n                                <Errors className=\"text-danger\"\r\n                                    show=\"touched\"\r\n                                    model=\".author\"\r\n                                    messages={{\r\n                                        required :'Required',\r\n                                        minlength:'Must be greater than 2 Characters',\r\n                                        maxlength:'Must be 15 characters or less'\r\n                                    }}\r\n                                >\r\n\r\n                                </Errors>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={12}>\r\n                                     Comments\r\n                                </Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\"\r\n                                    rows=\"6\"\r\n                                    name=\"comment\" placeholder=\"Add Comments\"\r\n                                    className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                <Button type=\"submit\" className=\" btn btn-info\" >Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n            </Modal>\r\n        </React.Fragment>\r\n    );\r\n    }\r\n}\r\n    function Displayfun({dish})\r\n    {\r\n        \r\n            \r\n            return(\r\n                <FadeTransform in transformProps={{   exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n                    <Card >\r\n                    <CardImg src={baseUrl+ dish.image} alt={dish.name}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n \r\n            );\r\n\r\n            \r\n    }\r\n    \r\n    function Commentfun({comments,postComment,dishId})\r\n    {\r\n        \r\n        const dishcom_var=<Stagger in>{comments.map((comment)=>\r\n        { \r\n            return (\r\n                <Fade in>\r\n                    <li>\r\n                        <p>{comment.comment}</p>\r\n                        <p>{comment.author},{comment.date}</p>\r\n                    \r\n                    </li>\r\n                </Fade>\r\n\r\n            );\r\n        \r\n        })}\r\n        </Stagger>\r\n\r\n        return(\r\n            \r\n            <div className=\"pb-3\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                 {dishcom_var}\r\n                 </ul>\r\n                 <CommentForm postComment={postComment} dishId={dishId}/>\r\n            </div> \r\n            )        \r\n        }\r\n    \r\n\r\n    function Detail(props)\r\n    {\r\n        if(props.isLoading)\r\n        {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        else if(props.errMsg)\r\n        {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMsg}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!=null && props.comments!=null)\r\n            return(\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-12\">\r\n                    <Displayfun dish={props.dish}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <Commentfun  comments={props.comments} postComment={props.postComment} dishId={props.dish.id}/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                 );\r\n        \r\n        else\r\n            return (\r\n                <div>\r\n                </div>\r\n            );\r\n        \r\n\r\n    }\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {Media,} from 'reactstrap';\r\nimport {Stagger,Fade} from 'react-animation-components';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nfunction Leader(props)\r\n{\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n          <Stagger in>\r\n            <Media className=\"pt-3\">\r\n            <Media  >\r\n              <Media object src={baseUrl+ leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Fade in>\r\n            <Media className=\"pl-4 pb-5 \" body>\r\n              <Media heading>\r\n                {leader.name}\r\n              </Media>\r\n              <Media className=\"pb-2\" subtitle>{leader.designation}</Media>\r\n                {leader.description}\r\n             </Media>\r\n             </Fade>\r\n          </Media>\r\n          </Stagger>\r\n        ); \r\n    });\r\n    return (\r\n        <div>\r\n            {leaders}\r\n        </div>\r\n    );\r\n}\r\nexport default Leader;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Leader from './leaderDetailComponent';\r\nfunction About(props) {\r\n    \r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Leader leaders={props.leaders} isLoading={props.leadersLoading} errMsg={props.errMsg}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React,{Component} from 'react';\r\nimport { Nav,Button,Modal,FormGroup,Form,Label,Input,ModalHeader,ModalBody, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            isNavOpen:false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin=this.handleLogin.bind(this);\r\n    }\r\n    handleLogin(event)\r\n    {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        \r\n        event.preventDefault();\r\n\r\n    }\r\n    toggleNav()\r\n    {\r\n        this.setState({isNavOpen: !this.state.isNavOpen})\r\n    }\r\n    toggleModal()\r\n    {\r\n        this.setState({isModalOpen:!this.state.isModalOpen})\r\n\r\n    }\r\nrender()\r\n{\r\n   \r\n    return(\r\n\r\n\r\n    \r\n        <div>\r\n                <Navbar dark expand=\"md\"> \r\n                <div className=\"container\">\r\n                <NavbarToggler onClick={this.toggleNav}/>\r\n                   \r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar className=\"mr-auto\">\r\n                            <NavItem> \r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span>\r\n                                    Home\r\n                                </NavLink> \r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/about\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> \r\n                                    About\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span>\r\n                                    Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contact\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span>\r\n                                    Contact\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> \r\n                                    Login</Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1>Ristorante con Fusion</h1>\r\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n        </div>\r\n\r\n    );\r\n}\r\n}\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Footer(props)\r\n{\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contact\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    );\r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\nfunction RenderCard({item,isLoading,errorMsg})\r\n {\r\n    if(isLoading)\r\n    {\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"row\">            \r\n                <Loading />\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n    else if(errorMsg)\r\n    {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">            \r\n                    <h4>{errorMsg}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n            <Card>\r\n                <CardImg src={baseUrl+ item.image} alt={item.name}/>\r\n                <CardBody>\r\n\r\n                    <CardTitle>\r\n                        {item.name}\r\n                    </CardTitle>\r\n\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    \r\n                    <CardText>\r\n                        {item.description}\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n\r\n        );\r\n}\r\n     function Home(props)   \r\n    {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.dish} isLoading={props.dishLoading} errorMsg={props.disherrMsg}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.promotion} isLoading={props.promosLoading} errorMsg={props.promoserrMsg}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md m-1\">\r\n                        <RenderCard item={props.leader} isLoading={props.leadersLoading} errorMsg={props.leaderserrMsg}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button,  Label, Col,Row } from 'reactstrap';\r\nimport {actions,Form,Errors,Control} from 'react-redux-form';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass  Contact extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    handleSubmit(values)\r\n    {\r\n        console.log(\"state is \"+ JSON.stringify(values));\r\n        alert(\"state is \"+ JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedBackForm();\r\n       // event.preventDefault();\r\n    }\r\n   \r\n    render()\r\n    {\r\n         return(\r\n        \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                <div className=\"col-12 col-md-12\">    \r\n                    <Form model=\"feedback\" onSubmit={(values)=> this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label md={2} htmlFor=\"firstname\" >\r\n                                    First Name\r\n                            </Label>\r\n                            <Col md={8}>\r\n                                    <Control.text model=\".firstname\"   id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                      className=\"form-control\"\r\n                                      validators={{\r\n                                          required,minLength:minLength(3),maxLength:maxLength(10)\r\n                                      }}\r\n                                      />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required:'Required',\r\n                                        minLength:'Must be >=3',\r\n                                        maxLength:'Must be less than 10'\r\n                                    }}\r\n                                    />\r\n                            </Col>       \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlfor md={2}>\r\n                                Last Name\r\n                            </Label>\r\n                            <Col md={8}>\r\n                                <Control.text model=\".lastname\" name=\"lastname\" id=\"lastname\" \r\n                                placeholder=\"last Name\"\r\n                                className=\"form-control\" \r\n                                validators={{\r\n                                    required,minLength:minLength(3),maxLength:maxLength(10)\r\n                                }}\r\n                                />\r\n                                <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required:'Required',\r\n                                        minLength:'Must be >=3',\r\n                                        maxLength:'Must be less than 10'\r\n                                    }}\r\n                                    />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. number\"\r\n                                        validators={{\r\n                                            required,minLength:minLength(3),maxLength:maxLength(15),\r\n                                            isNumber\r\n                                        }} />\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            minLength:\"must be>=3\",\r\n                                            maxLength:'Must be less than 15',\r\n                                            isNumber:'Must be a number'\r\n                                        }}\r\n                                        />\r\n                                </Col>\r\n                            </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>\r\n                                Email\r\n                            </Label>\r\n                            <Col md={8}>\r\n                                <Control.text model=\".email\" className=\"form-control\"  name=\"email\"\r\n                                id=\"email\" placeholder=\"email\" \r\n                                validators={{\r\n                                    required,validEmail\r\n                                }}\r\n                                />\r\n                                <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required:'Required',\r\n                                            validEmail:'Invalid email Address'\r\n                                        }}\r\n                                        />\r\n                            </Col> \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                            <Label check>\r\n                                                <Control.checkbox model=\".agree\" className=\"form-check-input\"\r\n                                                    name=\"agree\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                            </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" className=\"form-control\" name=\"contactType\" >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\" className=\"form-control\"/>\r\n                                </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n        );\r\n    }\r\n}\r\nexport default Contact;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n       \r\n        comment: comment\r\n    }\r\n});\r\nexport const postFeedback=(firstname,lastname,telnum,email,agree,contactType,message)=>(dispatch)=>\r\n{\r\n    const newFeedback=\r\n    {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    }\r\n    return fetch(baseUrl+'feedback',{\r\n        method:'POST',\r\n        body:JSON.stringify(newFeedback),\r\n        headers:\r\n        {\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials:\"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      })\r\n      .then(response => response.json())\r\n      .then(response => {alert(JSON.stringify(response)); })\r\n      .catch(error => {\r\n        console.log('post feedback ', error.message);\r\n        alert('Your feedback could not be posted\\nError: ' + error.message);\r\n      });\r\n\r\n}\r\nexport const postComment=(dishId, rating, author, comment)=>(dispatch)=>\r\n{\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl+'comments',\r\n    {\r\n        method:\"POST\",\r\n        body:JSON.stringify(newComment),\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        credentials:\"same-origin\"\r\n\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response=>dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n}\r\n\r\n//THIS WAS PREVIOUS ..NEECHAY WALA SERVER SAY LEYGA NEW\r\n// export const FetchDishes=()=>(dispatch)=>\r\n// {\r\n//     dispatch(dishesLoading(true));\r\n//     setTimeout(()=>{dispatch(addDishes(DISHES))},2000);\r\n// }\r\n\r\n\r\n\r\n export const FetchDishes=()=>(dispatch)=>\r\n {\r\n     dispatch(dishesLoading(true));\r\n    return fetch(baseUrl+'dishes')\r\n    .then(response=>\r\n        {   if(response.ok)\r\n                return response;//chained with the next then\r\n            else\r\n            {\r\n                var error=new Error('Error'+response.status+': '+response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        }, //next error is for when server is not even connected or no response is accepted\r\n        error=>\r\n        {\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n    .then(response=>response.json())\r\n    .then(dishes=>dispatch(addDishes(dishes)))\r\n    .catch(error=>dispatch(dishesFailed(error.message)));\r\n}\r\nexport const FetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n    return fetch(baseUrl + 'leaders')\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      })\r\n      .then(response => response.json())\r\n      .then(leaders => dispatch(addLeaders(leaders)))\r\n      .catch(error => dispatch(leadersFailed(error.message)));\r\n  };\r\nexport const FetchComments=()=>(dispatch)=>\r\n{\r\n    return fetch(baseUrl+'comments')\r\n    .then(response=>\r\n        {   if(response.ok)\r\n                return response;//chained with the next then\r\n            else\r\n            {\r\n                var error=new Error('Error'+response.status+': '+response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        }, //next error is for when server is not even connected or no response is accepted\r\n        error=>\r\n        {\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n        .then(response=>response.json())\r\n    .then(comments=>dispatch(addComments(comments)))\r\n    .catch(error=>dispatch(commentsFailed(error.message)));\r\n}\r\nexport const FetchPromos=()=>(dispatch)=>\r\n{\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl+'promotions')\r\n    .then(response=>\r\n        {   if(response.ok)\r\n                return response;//chained with the next then\r\n            else\r\n            {\r\n                var error=new Error('Error'+response.status+': '+response.statusText);\r\n                error.response=response;\r\n                throw error;\r\n            }\r\n        }, //next error is for when server is not even connected or no response is accepted\r\n        error=>\r\n        {\r\n            var errmess=new Error(error.message);\r\n            throw errmess;\r\n        }\r\n        )\r\n    .then(response=>response.json())\r\n    .then(promos=>dispatch(addPromos(promos)))\r\n    .catch(error=>dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading=()=>\r\n({\r\n    type:ActionTypes.LEADERS_LOADING\r\n    \r\n});\r\nexport const leadersFailed=(errMsg)=>\r\n({\r\n    type:ActionTypes.LEADERS_FAILED,\r\n    payload : errMsg\r\n});\r\nexport const addLeaders=(leaders)=>\r\n(\r\n    {\r\n        type:ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    }\r\n);\r\nexport const addComments=(comments)=>\r\n({\r\n    type:ActionTypes.ADD_COMMENTS,\r\n    payload:comments\r\n})\r\nexport const commentsFailed=(errmess)=>\r\n({\r\n    type:ActionTypes.COMMENTS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\n\r\nexport const addPromos=(promos)=>\r\n({\r\n    type:ActionTypes.ADD_PROMOS,\r\n    payload:promos\r\n});\r\nexport const promosLoading=()=>\r\n({\r\n    type:ActionTypes.PROMOS_LOADING\r\n\r\n});\r\nexport const promosFailed=(errmess)=>\r\n({\r\n    type:ActionTypes.PROMOS_FAILED,\r\n    payload:errmess\r\n});\r\n\r\nexport const dishesLoading=()=>\r\n({\r\n    type:   ActionTypes.DISHES_LOADING,\r\n   \r\n});\r\nexport const dishesFailed=(errMsg)=>\r\n({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload:  errMsg\r\n\r\n\r\n});\r\nexport const addDishes=(dishes)=>\r\n({  \r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n        \r\n\r\n});","export const ADD_COMMENT='ADD_COMMENT';\r\nexport const DISHES_LOADING='DISHES_LOADING';\r\nexport const DISHES_FAILED='DISHES_FAILED;'\r\nexport const ADD_DISHES='ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React,{Component} from 'react';\r\nimport Menu from './menuComponent';\r\nimport Detail from './dishDetailComponent';\r\nimport About from './aboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './contactComponent';\r\nimport {Switch,Route,Redirect, withRouter} from 'react-router-dom';\r\nimport {postFeedback, postComment,FetchDishes, FetchComments, FetchPromos, FetchLeaders } from '../redux/ActionCreators';\r\nimport {actions} from 'react-redux-form';\r\nimport {connect} from'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nconst mapStateToProps=state=>\r\n{\r\n  return{\r\n   \r\n    dishes:state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => (\r\n  {\r\n  postFeedback:(firstname, lastname, telnum, email, agree, contactType, message)=>dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  FetchDishes:()=>{dispatch(FetchDishes())},\r\n  FetchComments:()=>{dispatch(FetchComments())},\r\n  FetchPromos:()=>{dispatch(FetchPromos())},\r\n  FetchLeaders:()=>{dispatch(FetchLeaders())},\r\n  \r\n  resetFeedBackForm:()=>{dispatch(actions.reset('feedback'))}\r\n});\r\nclass  Main extends Component \r\n{\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    \r\n  }\r\n  componentDidMount() {\r\n    this.props.FetchDishes();\r\n    this.props.FetchLeaders();\r\n    this.props.FetchPromos();\r\n    this.props.FetchComments();\r\n    \r\n  }\r\n  \r\n  render()\r\n  {\r\n    const Dishidcomp=({match})=>\r\n    {\r\n        return(\r\n              <div>\r\n                  <Detail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n      postComment={this.props.postComment}\r\n        isLoading={this.props.dishes.isLoading}\r\n        errorMsg={this.props.dishes.errMsg}\r\n        commenterrMsg={this.props.comments.errMsg}\r\n        \r\n       \r\n      \r\n        />\r\n  \r\n              </div>\r\n        );\r\n    };\r\n    const CompforAbout=()=>\r\n    {\r\n        return(<About leaders={this.props.leaders.leaders} leadersLoading={this.props.leaders.isLoading} leaderserrMsg={this.props.leaders.errMsg}/>);\r\n    }\r\n    const CompforContact=()=>\r\n    {\r\n      return(<Contact postFeedback={this.props.postFeedback} resetFeedBackForm={this.props.resetFeedBackForm}/>);\r\n    }\r\n    const HomePage=()=>\r\n    { return(\r\n        //i only need featured ones so use filter\r\n            < Home\r\n            dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                dishLoading={this.props.dishes.isLoading}\r\n                 disherrMsg={this.props.dishes.errMsg}\r\n                 promotion={this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\r\n                 promosLoading={this.props.promotions.isLoading}\r\n                  promoserrMsg={this.props.promotions.errMsg}\r\n\r\n                  leader={this.props.leaders.leaders.filter((leader)=> leader.featured )[0]}\r\n                  leadersLoading={this.props.leaders.isLoading}\r\n                  leaderserrMsg={this.props.leaders.errMsg} \r\n                   \r\n             />\r\n        );\r\n        }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header/>\r\n            <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                <Route path=\"/home\" component={HomePage}/>\r\n                <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}  />}/>\r\n                <Route path=\"/menu/:dishId\" component={Dishidcomp }/>\r\n                <Route exact path=\"/contact\" component={CompforContact}/>\r\n                <Route path=\"/about\" component={CompforAbout}/>\r\n                <Redirect to=\"/home\"/>\r\n            </Switch>\r\n            </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/>\r\n        </div>\r\n    \r\n  );\r\n}\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\nexport const Dishes=(state={isLoading:true\r\n    ,errMsg:null,\r\n    dishes:[] },action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state,isLoading:true,errMsg:null,dishes:[]};\r\n        case ActionTypes.DISHES_FAILED:\r\n            return{...state,isLoading:false,errMsg:action.payload};\r\n        case ActionTypes.ADD_DISHES:\r\n            return{...state,isLoading:false,errMsg:null,dishes:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}"," \r\nimport * as ActionTypes from './ActionTypes';\r\nexport const Leaders=(state={isLoading:true,errMsg:null,leaders:[]},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ActionTypes.ADD_LEADERS:\r\n                return{...state,isLoading:false,errMsg:null,leaders:action.payload};\r\n        case ActionTypes.LEADERS_LOADING:\r\n                return{...state,isLoading:true,errMsg:null,leaders:[]};\r\n        case ActionTypes.LEADERS_FAILED:\r\n                return{...state,isLoading:false,errMsg:action.payload};\r\n        default:\r\n                return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport { actionTypes } from 'react-redux-form';\r\n\r\nexport const Comments = (state = {errMsg:null,comments:[]}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return{...state,errMsg:null,comments:action.payload}\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state,errMsg:action.payload}\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            console.log(\"Comment: \", comment);\r\n            return {...state,comments:state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions=(state={isLoading:true,errMsg:null,promotions:[]},action)=>\r\n{\r\n    switch(action.type)\r\n    {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return{...state,isLoading:false,errMsg:null,promotions:action.payload};\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return{...state,isLoading:false,errMsg:action.payload};\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return{...state,isLoading:true,errMsg:null,promotions:[]} ;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitializeFeedBack=\r\n{\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React,{Component} from 'react';\nimport './App.css';\nimport Main from './components/mainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport { configureStore } from './redux/configureStore';\nconst store=configureStore();\nclass  App extends Component \n{\n  \n  render()\n  {\n  return (\n    <Provider store={store}>\n    <BrowserRouter>\n    <div className=\"App\">\n      <Main/>\n    </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n}\n\nexport  default App ;\n","import {createStore,combineReducers, applyMiddleware} from 'redux';\r\nimport {Dishes} from './Dishes';\r\nimport {Leaders} from './Leaders';\r\nimport {Comments} from './Comments';\r\nimport {Promotions} from './Promotions';\r\nimport thunk from 'redux-thunk';\r\nimport {createForms} from 'react-redux-form';\r\nimport {InitializeFeedBack} from './Forms'\r\nimport logger from 'redux-logger';\r\nexport const configureStore=()=>\r\n{\r\n    const store=createStore(\r\n        combineReducers({\r\n            dishes:Dishes,\r\n            comments:Comments,\r\n            leaders:Leaders,\r\n            promotions:Promotions,\r\n            ...createForms({feedback:InitializeFeedBack})\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n        \r\n    );\r\n    return store;\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}